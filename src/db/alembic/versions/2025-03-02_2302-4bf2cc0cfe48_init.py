"""init

Revision ID: 4bf2cc0cfe48
Revises: 
Create Date: 2025-03-02 23:02:02.074655

"""

from typing import Sequence, Union
from sqlalchemy.dialects import postgresql

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4bf2cc0cfe48'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    dockerized_tool_enum = postgresql.ENUM('chargefw2', 'mole2', 'gesamt', name='dockerizedtoolenum', create_type=False)
    dockerized_tool_enum.create(op.get_bind(), checkfirst=True)
    calculation_status_enum = postgresql.ENUM(
        'pending', 'running', 'success', 'cached', 'failure', name='calculationstatusenum', create_type=False
    )
    calculation_status_enum.create(op.get_bind(), checkfirst=True)
    op.create_table(
        'calculation_results',
        sa.Column('id', sa.Uuid(), nullable=False),
        sa.Column('output_files', sa.JSON(), nullable=False),
        sa.Column('output_data', sa.JSON(), nullable=False),
        sa.Column('started_at', sa.DateTime(), nullable=False),
        sa.Column('finished_at', sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'users',
        sa.Column('id', sa.Uuid(), nullable=False),
        sa.Column('email', sa.String(), nullable=False),
        sa.Column('first_name', sa.String(), nullable=True),
        sa.Column('last_name', sa.String(), nullable=True),
        sa.Column('password_hash', sa.String(), nullable=False),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('is_superuser', sa.Boolean(), nullable=False),
        sa.Column('queue_priority', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('email'),
    )
    op.create_table(
        'pipelines',
        sa.Column('id', sa.Uuid(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('user_id', sa.Uuid(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified_at', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ['user_id'],
            ['users.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'calculation_requests',
        sa.Column('id', sa.Uuid(), nullable=False),
        sa.Column('tool_name', dockerized_tool_enum, nullable=False),
        sa.Column(
            'status',
            calculation_status_enum,
            nullable=False,
        ),
        sa.Column('input_files', sa.JSON(), nullable=False),
        sa.Column('input_data', sa.JSON(), nullable=False),
        sa.Column('result_id', sa.Uuid(), nullable=True),
        sa.Column('pipeline_id', sa.Uuid(), nullable=True),
        sa.Column('file_filter_regex', sa.String(), nullable=True),
        sa.Column('user_id', sa.Uuid(), nullable=True),
        sa.Column('user_host', sa.String(), nullable=True),
        sa.Column('requested_at', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ['pipeline_id'],
            ['pipelines.id'],
        ),
        sa.ForeignKeyConstraint(
            ['result_id'],
            ['calculation_results.id'],
        ),
        sa.ForeignKeyConstraint(
            ['user_id'],
            ['users.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'pipeline_items',
        sa.Column('id', sa.Uuid(), nullable=False),
        sa.Column('sequence_number', sa.Integer(), nullable=False),
        sa.Column('pipeline_id', sa.Uuid(), nullable=False),
        sa.Column('tool_name', dockerized_tool_enum, nullable=False),
        sa.Column('input_data', sa.JSON(), nullable=False),
        sa.Column('file_filter_regex', sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ['pipeline_id'],
            ['pipelines.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('pipeline_items')
    op.drop_table('calculation_requests')
    op.drop_table('pipelines')
    op.drop_table('users')
    op.drop_table('calculation_results')
    # ### end Alembic commands ###
